<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on hrst4.xyz</title>
    <link>http://hrst4.xyz/blog/</link>
    <description>Recent content in Blog on hrst4.xyz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 11 Dec 2023 09:06:53 +0100</lastBuildDate><atom:link href="http://hrst4.xyz/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hexagone TAoC</title>
      <link>http://hrst4.xyz/hexagon_taoc/</link>
      <pubDate>Mon, 11 Dec 2023 09:06:53 +0100</pubDate>
      
      <guid>http://hrst4.xyz/hexagon_taoc/</guid>
      <description>SDF d&amp;rsquo;un hexagone Première chose à remarquer: la symétrie en $X$ et en $Y$.
On peut diviser la forme en 4 quadrants, et du coup se concentrer sur un seul quadrant.
On remarque 2 lignes, les pixels qui appartiennent à l&amp;rsquo;hexagone se situent à la fois:
à gauche de la ligne verticale et en dessous de la ligne diagonale Ligne verticale C&amp;rsquo;est assez simple, on la détermine grâce à la position du pixel en $X$.</description>
    </item>
    
    <item>
      <title>Effets hexagonaux</title>
      <link>http://hrst4.xyz/hexagones/</link>
      <pubDate>Sun, 10 Dec 2023 11:28:53 +0100</pubDate>
      
      <guid>http://hrst4.xyz/hexagones/</guid>
      <description>Tutoriel de graphisme procédural : Effets hexagonaux J&amp;rsquo;ai remarqué récemment que beaucoup d&amp;rsquo;effets 2D vraiment intéressants sur shadertoy.com impliquent des motifs répétitifs et des grilles d&amp;rsquo;une sorte ou d&amp;rsquo;une autre. Les grilles cartésiennes standard, les grilles triangulaires et les grilles hexagonales semblent être les plus courantes. Les hexagones en particulier ont un aspect très cool et futuriste, ce qui explique que des motifs hexagonaux apparaissent dans de nombreux fonds d&amp;rsquo;écran et dessins de science-fiction.</description>
    </item>
    
    <item>
      <title>Rendering Mendelbrot</title>
      <link>http://hrst4.xyz/rendering-mendelbrot/</link>
      <pubDate>Wed, 22 Nov 2023 11:28:53 +0100</pubDate>
      
      <guid>http://hrst4.xyz/rendering-mendelbrot/</guid>
      <description>Rendu de l&amp;rsquo;ensemble de Mandelbrot avec des shaders (avec OpenGL et GLSL) Introduction Une bonne façon de commencer à coder des shaders est de rendre des fractales avec eux.
Dans ce billet, je vais vous guider dans la création d&amp;rsquo;une application simple d&amp;rsquo;exploration de l&amp;rsquo;ensemble de Mandelbrot que j&amp;rsquo;ai construite en utilisant des shaders GLSL.
Si vous voulez commencer à apprendre à coder des shaders, je vous suggère de jeter un coup d&amp;rsquo;œil à Shadertoy.</description>
    </item>
    
  </channel>
</rss>
